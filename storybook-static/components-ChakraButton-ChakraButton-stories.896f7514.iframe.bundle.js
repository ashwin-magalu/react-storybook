"use strict";(self.webpackChunkreact_storybook=self.webpackChunkreact_storybook||[]).push([[785],{"./src/components/ChakraButton/ChakraButton.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Danger:()=>Danger,Knobs:()=>Knobs,Log:()=>Log,Success:()=>Success,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ChakraButton_stories});var react=__webpack_require__("./node_modules/react/index.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),create_context=__webpack_require__("./node_modules/@chakra-ui/react/dist/esm/create-context.js"),merge_props=__webpack_require__("./node_modules/@chakra-ui/react/dist/esm/merge-props.js"),cx=__webpack_require__("./node_modules/@chakra-ui/react/dist/esm/utils/cx.js");const EMPTY_STYLES=Object.freeze({});Object.freeze({});var factory=__webpack_require__("./node_modules/@chakra-ui/react/dist/esm/styled-system/factory.js"),provider=__webpack_require__("./node_modules/@chakra-ui/react/dist/esm/styled-system/provider.js");const{withContext,PropsProvider}=function createRecipeContext(options){const{key:recipeKey,recipe:recipeConfig}=options,contextName=(str=recipeKey||recipeConfig.className||"Component").charAt(0).toUpperCase()+str.slice(1);var str;const[PropsProvider,usePropsContext]=(0,create_context.q)({strict:!1,name:`${contextName}PropsContext`,providerName:`${contextName}PropsContext`});return{withContext:(Component,options2)=>{const SuperComponent=(0,factory.B)(Component,{},options2),StyledComponent=(0,react.forwardRef)(((inProps,ref)=>{const props=(0,merge_props.v)(usePropsContext(),inProps),{unstyled,...otherProps}=props,fallbackRecipe=props.recipe||recipeConfig,recipe=function useRecipe(options){const{key,recipe:recipeProp}=options,sys=(0,provider.$)();return(0,react.useMemo)((()=>{const recipe=recipeProp||(null!=key?sys.getRecipe(key):{});return sys.cva(structuredClone(recipe))}),[key,recipeProp,sys])}({key:recipeKey,recipe:fallbackRecipe}),[variantProps,localProps]=recipe.splitVariantProps(otherProps),styles=unstyled?EMPTY_STYLES:recipe(variantProps);return(0,jsx_runtime.jsx)(SuperComponent,{...localProps,ref,css:[styles,props.css],className:(0,cx.cx)(recipe.className,props.className)})}));return StyledComponent.displayName=Component.displayName||Component.name,StyledComponent},PropsProvider,usePropsContext}}({key:"button"}),Button=withContext("button",{defaultProps:{type:"button"}});var dist=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs"),addon_knobs_dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),process=__webpack_require__("./node_modules/process/browser.js");const ChakraButton_stories={title:"Chakra/Button",component:Button,parameters:{docs:{description:{component:"This is a custom Chakra Button component"}}}},Success=()=>(0,jsx_runtime.jsx)(Button,{onClick:(0,dist.XI)("Click Handler"),backgroundColor:"green",children:"Success"}),Danger=()=>(0,jsx_runtime.jsx)(Button,{...(0,dist.o1)("onClick","onMouseOver"),backgroundColor:"red",children:"Danger"}),Log=()=>(0,jsx_runtime.jsx)(Button,{onClick:()=>console.log("Log button clicked",process.env.STORYBOOK_THEME),backgroundColor:"blue",children:"Log"}),Knobs=()=>(0,jsx_runtime.jsx)(Button,{disabled:(0,addon_knobs_dist.boolean)("Disabled",!1),backgroundColor:(0,addon_knobs_dist.text)("Color","purple"),children:(0,addon_knobs_dist.text)("Label","Button Label")}),__namedExportsOrder=["Success","Danger","Log","Knobs"];Success.parameters={...Success.parameters,docs:{...Success.parameters?.docs,source:{originalSource:'() => <Button onClick={action("Click Handler")} backgroundColor="green">\r\n    Success\r\n  </Button>',...Success.parameters?.docs?.source}}},Danger.parameters={...Danger.parameters,docs:{...Danger.parameters?.docs,source:{originalSource:'() => <Button {...actions("onClick", "onMouseOver")} backgroundColor="red">\r\n    Danger\r\n  </Button>',...Danger.parameters?.docs?.source}}},Log.parameters={...Log.parameters,docs:{...Log.parameters?.docs,source:{originalSource:'() => <Button onClick={() => console.log("Log button clicked", process.env.STORYBOOK_THEME)} backgroundColor="blue">\r\n    Log\r\n  </Button>',...Log.parameters?.docs?.source}}},Knobs.parameters={...Knobs.parameters,docs:{...Knobs.parameters?.docs,source:{originalSource:'() => <Button disabled={boolean("Disabled", false)} backgroundColor={text("Color", "purple")}>\r\n    {text("Label", "Button Label")}\r\n  </Button>',...Knobs.parameters?.docs?.source}}}}}]);